Signatures:
    app  : _a list -> _a list -> _a list ;
    rev  : _a list -> _a list ;

Definitions:
    [app nil] : forall xs : _a list .
                app [] xs = xs : _a list ;
    [app xs]  : forall xs : _a list . forall x : _a . forall ys : _a list .
                app (x::xs) ys = x :: app xs ys : _a list ;
    [rev nil] : rev [] = [] : _a list ;
    [rev xs]  : forall xs : _a list . forall x : _a .
                rev (x :: xs) = app (rev xs) (x :: []) : _a list ;

Theorem [lemma]:
    Statement: forall xs : _a list . forall ys : _a list . forall zs : _a list .
               app (app xs ys) zs = app xs (app ys zs) : _a list
    Proof:
        TODO
    QED.

